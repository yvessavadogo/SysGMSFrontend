import { Pipe } from '@angular/core';
import * as i0 from "@angular/core";
export class PdfBreakpoints {
}
PdfBreakpoints.xs = 490;
PdfBreakpoints.sm = 560;
PdfBreakpoints.md = 610;
PdfBreakpoints.lg = 660;
PdfBreakpoints.xl = 780;
PdfBreakpoints.xxl = 900;
export class ResponsiveCSSClassPipe {
    transform(visible, defaultClass = 'always-visible') {
        switch (visible) {
            case undefined:
                return defaultClass;
            case false:
                return 'invisible';
            case true:
                return defaultClass;
            case 'always-visible':
                return 'always-visible';
            case 'always-in-secondary-menu':
                return 'always-in-secondary-menu';
            case 'xxs':
                return 'hiddenXXSView';
            case 'xs':
                return 'hiddenTinyView';
            case 'sm':
                return 'hiddenSmallView';
            case 'md':
                return 'hiddenMediumView';
            case 'lg':
                return 'hiddenLargeView';
            case 'xl':
                return 'hiddenXLView';
            case 'xxl':
                return 'hiddenXXLView';
        }
    }
}
ResponsiveCSSClassPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.4.0", ngImport: i0, type: ResponsiveCSSClassPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
ResponsiveCSSClassPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.4.0", ngImport: i0, type: ResponsiveCSSClassPipe, name: "responsiveCSSClass" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.4.0", ngImport: i0, type: ResponsiveCSSClassPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'responsiveCSSClass' }]
        }] });
export class NegativeResponsiveCSSClassPipe {
    transform(visible) {
        switch (visible) {
            case undefined:
                return 'always-visible';
            case 'always-visible':
            case true:
                return 'invisible';
            case 'invisible':
            case false:
                return 'invisible';
            case 'always-in-secondary-menu':
                return 'always-in-secondary-menu';
            case 'hiddenXXSView':
            case 'xxs':
                return 'visibleXXSView';
            case 'hiddenTinyView':
            case 'xs':
                return 'visibleTinyView';
            case 'sm':
            case 'hiddenSmallView':
                return 'visibleSmallView';
            case 'md':
            case 'hiddenMediumView':
                return 'visibleMediumView';
            case 'lg':
            case 'hiddenLargeView':
                return 'visibleLargeView';
            case 'xl':
            case 'hiddenXLView':
                return 'visibleXLView';
            case 'xxl':
            case 'hiddenXXLView':
                return 'visibleXXLView';
        }
    }
}
NegativeResponsiveCSSClassPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.4.0", ngImport: i0, type: NegativeResponsiveCSSClassPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
NegativeResponsiveCSSClassPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.4.0", ngImport: i0, type: NegativeResponsiveCSSClassPipe, name: "invertForSecondaryToolbar" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.4.0", ngImport: i0, type: NegativeResponsiveCSSClassPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'invertForSecondaryToolbar' }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzcG9uc2l2ZS12aXNpYmlsaXR5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWV4dGVuZGVkLXBkZi12aWV3ZXIvc3JjL2xpYi9yZXNwb25zaXZlLXZpc2liaWxpdHkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7O0FBSXBELE1BQU0sT0FBTyxjQUFjOztBQUNsQixpQkFBRSxHQUFHLEdBQUcsQ0FBQztBQUVULGlCQUFFLEdBQUcsR0FBRyxDQUFDO0FBRVQsaUJBQUUsR0FBRyxHQUFHLENBQUM7QUFFVCxpQkFBRSxHQUFHLEdBQUcsQ0FBQztBQUVULGlCQUFFLEdBQUcsR0FBRyxDQUFDO0FBRVQsa0JBQUcsR0FBRyxHQUFHLENBQUM7QUE0Qm5CLE1BQU0sT0FBTyxzQkFBc0I7SUFDakMsU0FBUyxDQUFDLE9BQXlDLEVBQUUsZUFBbUMsZ0JBQWdCO1FBQ3RHLFFBQVEsT0FBTyxFQUFFO1lBQ2YsS0FBSyxTQUFTO2dCQUNaLE9BQU8sWUFBWSxDQUFDO1lBQ3RCLEtBQUssS0FBSztnQkFDUixPQUFPLFdBQVcsQ0FBQztZQUNyQixLQUFLLElBQUk7Z0JBQ1AsT0FBTyxZQUFZLENBQUM7WUFDdEIsS0FBSyxnQkFBZ0I7Z0JBQ25CLE9BQU8sZ0JBQWdCLENBQUM7WUFDMUIsS0FBSywwQkFBMEI7Z0JBQzdCLE9BQU8sMEJBQTBCLENBQUM7WUFDcEMsS0FBSyxLQUFLO2dCQUNSLE9BQU8sZUFBZSxDQUFDO1lBQ3pCLEtBQUssSUFBSTtnQkFDUCxPQUFPLGdCQUFnQixDQUFDO1lBQzFCLEtBQUssSUFBSTtnQkFDUCxPQUFPLGlCQUFpQixDQUFDO1lBQzNCLEtBQUssSUFBSTtnQkFDUCxPQUFPLGtCQUFrQixDQUFDO1lBQzVCLEtBQUssSUFBSTtnQkFDUCxPQUFPLGlCQUFpQixDQUFDO1lBQzNCLEtBQUssSUFBSTtnQkFDUCxPQUFPLGNBQWMsQ0FBQztZQUN4QixLQUFLLEtBQUs7Z0JBQ1IsT0FBTyxlQUFlLENBQUM7U0FDMUI7SUFDSCxDQUFDOzttSEE1QlUsc0JBQXNCO2lIQUF0QixzQkFBc0I7MkZBQXRCLHNCQUFzQjtrQkFEbEMsSUFBSTttQkFBQyxFQUFFLElBQUksRUFBRSxvQkFBb0IsRUFBRTs7QUFpQ3BDLE1BQU0sT0FBTyw4QkFBOEI7SUFDekMsU0FBUyxDQUFDLE9BQWtEO1FBQzFELFFBQVEsT0FBTyxFQUFFO1lBQ2YsS0FBSyxTQUFTO2dCQUNaLE9BQU8sZ0JBQWdCLENBQUM7WUFDMUIsS0FBSyxnQkFBZ0IsQ0FBQztZQUN0QixLQUFLLElBQUk7Z0JBQ1AsT0FBTyxXQUFXLENBQUM7WUFDckIsS0FBSyxXQUFXLENBQUM7WUFDakIsS0FBSyxLQUFLO2dCQUNSLE9BQU8sV0FBVyxDQUFDO1lBQ3JCLEtBQUssMEJBQTBCO2dCQUM3QixPQUFPLDBCQUEwQixDQUFDO1lBQ3BDLEtBQUssZUFBZSxDQUFDO1lBQ3JCLEtBQUssS0FBSztnQkFDUixPQUFPLGdCQUFnQixDQUFDO1lBQzFCLEtBQUssZ0JBQWdCLENBQUM7WUFDdEIsS0FBSyxJQUFJO2dCQUNQLE9BQU8saUJBQWlCLENBQUM7WUFDM0IsS0FBSyxJQUFJLENBQUM7WUFDVixLQUFLLGlCQUFpQjtnQkFDcEIsT0FBTyxrQkFBa0IsQ0FBQztZQUM1QixLQUFLLElBQUksQ0FBQztZQUNWLEtBQUssa0JBQWtCO2dCQUNyQixPQUFPLG1CQUFtQixDQUFDO1lBQzdCLEtBQUssSUFBSSxDQUFDO1lBQ1YsS0FBSyxpQkFBaUI7Z0JBQ3BCLE9BQU8sa0JBQWtCLENBQUM7WUFDNUIsS0FBSyxJQUFJLENBQUM7WUFDVixLQUFLLGNBQWM7Z0JBQ2pCLE9BQU8sZUFBZSxDQUFDO1lBQ3pCLEtBQUssS0FBSyxDQUFDO1lBQ1gsS0FBSyxlQUFlO2dCQUNsQixPQUFPLGdCQUFnQixDQUFDO1NBQzNCO0lBQ0gsQ0FBQzs7MkhBbkNVLDhCQUE4Qjt5SEFBOUIsOEJBQThCOzJGQUE5Qiw4QkFBOEI7a0JBRDFDLElBQUk7bUJBQUMsRUFBRSxJQUFJLEVBQUUsMkJBQTJCLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmV4cG9ydCB0eXBlIFJlc3BvbnNpdmVWaXNpYmlsaXR5ID0gYm9vbGVhbiB8ICdhbHdheXMtdmlzaWJsZScgfCAnYWx3YXlzLWluLXNlY29uZGFyeS1tZW51JyB8ICd4eHMnIHwgJ3hzJyB8ICdzbScgfCAnbWQnIHwgJ2xnJyB8ICd4bCcgfCAneHhsJztcblxuZXhwb3J0IGNsYXNzIFBkZkJyZWFrcG9pbnRzIHtcbiAgc3RhdGljIHhzID0gNDkwO1xuXG4gIHN0YXRpYyBzbSA9IDU2MDtcblxuICBzdGF0aWMgbWQgPSA2MTA7XG5cbiAgc3RhdGljIGxnID0gNjYwO1xuXG4gIHN0YXRpYyB4bCA9IDc4MDtcblxuICBzdGF0aWMgeHhsID0gOTAwO1xufVxuXG5leHBvcnQgdHlwZSBSZXNwb25zaXZlQ1NTQ2xhc3MgPVxuICB8ICdoaWRkZW5YWFNWaWV3J1xuICB8ICdoaWRkZW5UaW55VmlldydcbiAgfCAnaGlkZGVuU21hbGxWaWV3J1xuICB8ICdoaWRkZW5NZWRpdW1WaWV3J1xuICB8ICdoaWRkZW5MYXJnZVZpZXcnXG4gIHwgJ2hpZGRlblhMVmlldydcbiAgfCAnaGlkZGVuWFhMVmlldydcbiAgfCAnaW52aXNpYmxlJ1xuICB8ICdhbHdheXMtdmlzaWJsZSdcbiAgfCAnYWx3YXlzLWluLXNlY29uZGFyeS1tZW51JztcblxuZXhwb3J0IHR5cGUgUmVzcG9uc2l2ZUNTU0NsYXNzSW5TZWNvbmRhcnlUb29sYmFyID1cbiAgfCAndmlzaWJsZVhYU1ZpZXcnXG4gIHwgJ3Zpc2libGVUaW55VmlldydcbiAgfCAndmlzaWJsZVNtYWxsVmlldydcbiAgfCAndmlzaWJsZU1lZGl1bVZpZXcnXG4gIHwgJ3Zpc2libGVMYXJnZVZpZXcnXG4gIHwgJ3Zpc2libGVYTFZpZXcnXG4gIHwgJ3Zpc2libGVYWExWaWV3J1xuICB8ICdpbnZpc2libGUnXG4gIHwgJ2Fsd2F5cy12aXNpYmxlJ1xuICB8ICdhbHdheXMtaW4tc2Vjb25kYXJ5LW1lbnUnO1xuXG5AUGlwZSh7IG5hbWU6ICdyZXNwb25zaXZlQ1NTQ2xhc3MnIH0pXG5leHBvcnQgY2xhc3MgUmVzcG9uc2l2ZUNTU0NsYXNzUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuICB0cmFuc2Zvcm0odmlzaWJsZTogUmVzcG9uc2l2ZVZpc2liaWxpdHkgfCB1bmRlZmluZWQsIGRlZmF1bHRDbGFzczogUmVzcG9uc2l2ZUNTU0NsYXNzID0gJ2Fsd2F5cy12aXNpYmxlJyk6IFJlc3BvbnNpdmVDU1NDbGFzcyB7XG4gICAgc3dpdGNoICh2aXNpYmxlKSB7XG4gICAgICBjYXNlIHVuZGVmaW5lZDpcbiAgICAgICAgcmV0dXJuIGRlZmF1bHRDbGFzcztcbiAgICAgIGNhc2UgZmFsc2U6XG4gICAgICAgIHJldHVybiAnaW52aXNpYmxlJztcbiAgICAgIGNhc2UgdHJ1ZTpcbiAgICAgICAgcmV0dXJuIGRlZmF1bHRDbGFzcztcbiAgICAgIGNhc2UgJ2Fsd2F5cy12aXNpYmxlJzpcbiAgICAgICAgcmV0dXJuICdhbHdheXMtdmlzaWJsZSc7XG4gICAgICBjYXNlICdhbHdheXMtaW4tc2Vjb25kYXJ5LW1lbnUnOlxuICAgICAgICByZXR1cm4gJ2Fsd2F5cy1pbi1zZWNvbmRhcnktbWVudSc7XG4gICAgICBjYXNlICd4eHMnOlxuICAgICAgICByZXR1cm4gJ2hpZGRlblhYU1ZpZXcnO1xuICAgICAgY2FzZSAneHMnOlxuICAgICAgICByZXR1cm4gJ2hpZGRlblRpbnlWaWV3JztcbiAgICAgIGNhc2UgJ3NtJzpcbiAgICAgICAgcmV0dXJuICdoaWRkZW5TbWFsbFZpZXcnO1xuICAgICAgY2FzZSAnbWQnOlxuICAgICAgICByZXR1cm4gJ2hpZGRlbk1lZGl1bVZpZXcnO1xuICAgICAgY2FzZSAnbGcnOlxuICAgICAgICByZXR1cm4gJ2hpZGRlbkxhcmdlVmlldyc7XG4gICAgICBjYXNlICd4bCc6XG4gICAgICAgIHJldHVybiAnaGlkZGVuWExWaWV3JztcbiAgICAgIGNhc2UgJ3h4bCc6XG4gICAgICAgIHJldHVybiAnaGlkZGVuWFhMVmlldyc7XG4gICAgfVxuICB9XG59XG5cbkBQaXBlKHsgbmFtZTogJ2ludmVydEZvclNlY29uZGFyeVRvb2xiYXInIH0pXG5leHBvcnQgY2xhc3MgTmVnYXRpdmVSZXNwb25zaXZlQ1NTQ2xhc3NQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gIHRyYW5zZm9ybSh2aXNpYmxlOiBSZXNwb25zaXZlQ1NTQ2xhc3MgfCBSZXNwb25zaXZlVmlzaWJpbGl0eSk6IFJlc3BvbnNpdmVDU1NDbGFzc0luU2Vjb25kYXJ5VG9vbGJhciB7XG4gICAgc3dpdGNoICh2aXNpYmxlKSB7XG4gICAgICBjYXNlIHVuZGVmaW5lZDpcbiAgICAgICAgcmV0dXJuICdhbHdheXMtdmlzaWJsZSc7XG4gICAgICBjYXNlICdhbHdheXMtdmlzaWJsZSc6XG4gICAgICBjYXNlIHRydWU6XG4gICAgICAgIHJldHVybiAnaW52aXNpYmxlJztcbiAgICAgIGNhc2UgJ2ludmlzaWJsZSc6XG4gICAgICBjYXNlIGZhbHNlOlxuICAgICAgICByZXR1cm4gJ2ludmlzaWJsZSc7XG4gICAgICBjYXNlICdhbHdheXMtaW4tc2Vjb25kYXJ5LW1lbnUnOlxuICAgICAgICByZXR1cm4gJ2Fsd2F5cy1pbi1zZWNvbmRhcnktbWVudSc7XG4gICAgICBjYXNlICdoaWRkZW5YWFNWaWV3JzpcbiAgICAgIGNhc2UgJ3h4cyc6XG4gICAgICAgIHJldHVybiAndmlzaWJsZVhYU1ZpZXcnO1xuICAgICAgY2FzZSAnaGlkZGVuVGlueVZpZXcnOlxuICAgICAgY2FzZSAneHMnOlxuICAgICAgICByZXR1cm4gJ3Zpc2libGVUaW55Vmlldyc7XG4gICAgICBjYXNlICdzbSc6XG4gICAgICBjYXNlICdoaWRkZW5TbWFsbFZpZXcnOlxuICAgICAgICByZXR1cm4gJ3Zpc2libGVTbWFsbFZpZXcnO1xuICAgICAgY2FzZSAnbWQnOlxuICAgICAgY2FzZSAnaGlkZGVuTWVkaXVtVmlldyc6XG4gICAgICAgIHJldHVybiAndmlzaWJsZU1lZGl1bVZpZXcnO1xuICAgICAgY2FzZSAnbGcnOlxuICAgICAgY2FzZSAnaGlkZGVuTGFyZ2VWaWV3JzpcbiAgICAgICAgcmV0dXJuICd2aXNpYmxlTGFyZ2VWaWV3JztcbiAgICAgIGNhc2UgJ3hsJzpcbiAgICAgIGNhc2UgJ2hpZGRlblhMVmlldyc6XG4gICAgICAgIHJldHVybiAndmlzaWJsZVhMVmlldyc7XG4gICAgICBjYXNlICd4eGwnOlxuICAgICAgY2FzZSAnaGlkZGVuWFhMVmlldyc6XG4gICAgICAgIHJldHVybiAndmlzaWJsZVhYTFZpZXcnO1xuICAgIH1cbiAgfVxufVxuIl19